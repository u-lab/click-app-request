{"version":3,"sources":["infra/spread_sheet/fetchSpreadSheet.ts","service/fetchApprovalContent.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["csvtojson","require","fetchSpreadSheet","a","axios","get","data","noheader","output","fromString","obj","map","arr","timeStamp","contents","comment","nickName","public","fetchApprovalContent","filter","v","reverse","App","useSWR","console","log","className","style","background","color","href","item","index","maxWidth","slice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OACMA,EAAYC,EAAQ,IAmBbC,EAAgB,uCAAG,gCAAAC,EAAA,sEACLC,IAAMC,IAlBR,kJAiBO,uBACpBC,EADoB,EACpBA,KADoB,SAEVN,EAAU,CACxBO,UAAU,EACVC,OAAQ,QAEPC,WAAWH,GANY,cAEtBI,EAFsB,yBAQpBA,EACHC,KAAI,SAACC,GAAD,MAA8B,CAC/BC,UAAWD,EAAI,GACfE,SAAUF,EAAI,GACdG,QAASH,EAAI,GACbI,SAAUJ,EAAI,GACdK,OAAmB,SAAXL,EAAI,QAdQ,2CAAH,qDCfhBM,EAAoB,uCAAG,4BAAAf,EAAA,sEACbD,IADa,cAC1BI,EAD0B,yBAGzBA,EAAKa,QAAO,SAAAC,GAAC,OAAIA,EAAEH,UAAQI,WAHF,2CAAH,qD,OCuDlBC,EAzDH,WAAM,IAERhB,EAASiB,YAAO,uBAAwBL,GAAxCZ,KAER,OAAKA,GAILkB,QAAQC,IAAInB,GAGV,qBAAKoB,UAAU,MAAMC,MAAO,CAAEC,WAAY,WAA1C,SACE,gCACE,qBAAKF,UAAU,OAAOC,MAAO,CAAEC,WAAY,WAA3C,SACE,oBAAIF,UAAU,kCAAkCC,MAAO,CAAEE,MAAO,WAAhE,wCAGF,qBAAKH,UAAU,2BAAf,SACE,mBAAGA,UAAU,yCAAyCC,MAAO,CAAEE,MAAO,OAAQD,WAAY,WAAaE,KAAK,0EAA5G,sEAKF,sBAAKJ,UAAU,YAAf,UACE,oBAAIA,UAAU,6BAAd,wDAKEpB,EAAKK,KAAI,SAACoB,EAAMC,GACd,OACE,sBAEEL,MAAO,CAAEM,SAAU,QAASL,WAAY,QACxCF,UAAU,qDAHZ,UAKE,8BACE,mBAAGA,UAAU,UAAUC,MAAO,CAAEE,MAAO,WAAvC,SAAqDE,EAAKlB,UAAUqB,MAAM,EAAG,QAG/E,qBAAKR,UAAU,OAAf,SACE,mBAAGA,UAAU,UAAb,SAAwBK,EAAKjB,aAG/B,8BACE,mBAAGY,UAAU,qBAAqBC,MAAO,CAAEE,MAAO,WAAlD,oBAAoEE,EAAKf,gBAd7E,4BAC4BgB,gBA3BjC,8CCMIG,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e0270bc4.chunk.js","sourcesContent":["import axios from \"axios\"\nconst csvtojson = require('csvtojson')\n\nconst SPREAD_SHEET_URL = 'https://docs.google.com/spreadsheets/d/e/2PACX-1vRMAf5rZpMG9_OzqpNFqpzpzr2zfuTSBjk8oiUGlPm6eeT6aP3LNdc9G3vaGuJS9pZjEd8tAtn_f55E/pub?output=csv'\n\nexport interface SpreadSheetContent {\n    // 投稿日\n    timeStamp: string;\n    // 本文\n    contents: string\n    // 何か書きたいことがあったら\n    comment?: string\n    // ニックネーム\n    nickName: string\n    // 公開するかどうか\n    public: boolean\n}\n/**\n * スプレッドシートの取得\n */\nexport const fetchSpreadSheet = async () => {\n    const { data } = await axios.get(SPREAD_SHEET_URL)\n    const obj = await csvtojson({\n        noheader: false,  // 1行目がヘッダーの場合はfalse\n        output: \"csv\"\n    })\n        .fromString(data)\n\n    return (obj as [string, string, string, string, string][])\n        .map((arr): SpreadSheetContent => ({\n            timeStamp: arr[0],\n            contents: arr[1],\n            comment: arr[2],\n            nickName: arr[3],\n            public: arr[4] === \"TRUE\"\n        }))\n}","import { fetchSpreadSheet } from \"../infra/spread_sheet/fetchSpreadSheet\"\n\n/**\n * 許可された要望のみを取得する\n */\nexport const fetchApprovalContent = async () => {\n    const data = await fetchSpreadSheet()\n\n    return data.filter(v => v.public).reverse()\n}","import useSWR from 'swr';\nimport { fetchApprovalContent } from './service/fetchApprovalContent';\n\nconst App = () => {\n  // 許可された要望を取得\n  const { data } = useSWR('fetchApprovalContent', fetchApprovalContent)\n\n  if (!data) {\n    return <div>Loading...</div>;\n  }\n\n  console.log(data)\n\n  return (\n    <div className=\"App\" style={{ background: '#F3F3F3' }}>\n      <div>\n        <div className=\"py-8\" style={{ background: '#FFFFFF' }}>\n          <h1 className=\"text-center text-base font-bold\" style={{ color: '#333333' }}>ご意見箱</h1>\n        </div>\n\n        <div className=\"flex justify-center py-8\">\n          <a className=\"rounded-full px-8 py-4 hover:shadow-md\" style={{ color: '#fff', background: '#726DF0' }} href=\"https://share.click.gmbh/c9b07a1d-ac34-46f1-90d7-707d9b9cdd5e?locale=ja\">\n            ご意見はこちらから\n          </a>\n        </div>\n\n        <div className=\"pb-8 px-4\">\n          <h2 className=\"text-center font-bold pb-8\">\n            みんなのご意見\n          </h2>\n\n          {\n            data.map((item, index) => {\n              return (\n                <div\n                  key={`minna-no-contents-${index}`}\n                  style={{ maxWidth: '425px', background: '#fff' }}\n                  className=\"mx-auto mb-8 p-4 shadow rounded-md hover:shadow-lg\"\n                >\n                  <div>\n                    <p className=\"font-xs\" style={{ color: '#777777' }}>{item.timeStamp.slice(0, 10)}</p>\n                  </div>\n\n                  <div className=\"py-2\">\n                    <p className=\"font-sm\">{item.contents}</p>\n                  </div>\n\n                  <div>\n                    <p className=\"text-right font-xs\" style={{ color: '#777777' }}>{`@${item.nickName}`}</p>\n                  </div>\n                </div>\n              )\n            })\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}